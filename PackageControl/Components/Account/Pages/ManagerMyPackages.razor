@page "/package/my-packages"
@using Entities
@using Microsoft.AspNetCore.Authorization
@inject Business.B_Package PackageService
@inject Microsoft.AspNetCore.Components.Authorization.AuthenticationStateProvider AuthenticationStateProvider
@inject Microsoft.AspNetCore.Identity.UserManager<ApplicationUser> UserManager

@attribute [Authorize(Roles = "Admin,User")]

<h3>My Packages</h3>

@if (userPackages.Any())
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Package ID</th>
                <th>Neighborhood</th>
                <th>Parish</th>
                <th>Main Street</th>
                <th>Secondary Street</th>
                <th>House Number</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var package in userPackages)
            {
                <tr>
                    <td>@package.PackageId</td>
                    <td>@package.AddressNeighborhood</td>
                    <td>@package.AddressParish</td>
                    <td>@package.AddressMainStreet</td>
                    <td>@package.AddressSecondaryStreet</td>
                    <td>@package.HouseNumber</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No packages found for this user.</p>
}

@code {
    private List<Package> userPackages = new List<Package>();
    private ApplicationUser currentUser;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Obtener el estado de autenticación
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;

            // Obtener al usuario autenticado desde UserManager
            currentUser = await UserManager.GetUserAsync(user);

            if (currentUser != null)
            {
                // Obtener los paquetes del usuario autenticado
                userPackages = (await PackageService.GetPackagesByUserAsync(currentUser.Id)).ToList();
            }
            else
            {
                Console.WriteLine("User is not authenticated.");
            }
        }
        catch (Exception ex)
        {
            // Manejo de errores
            Console.WriteLine($"Error fetching user packages: {ex.Message}");
        }
    }
}
