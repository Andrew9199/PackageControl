@page "/user-packages/{userId}"
@using Entities
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@inject Business.B_Package PackageService
@inject UserManager<ApplicationUser> UserManager

@attribute [Authorize(Roles = "Admin")]

@code {
    [Parameter]
    public string userId { get; set; }

    private List<Package> userPackages = new();
    private string errorMessage;
    private string userName;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Obtener el nombre del usuario
            var user = await UserManager.FindByIdAsync(userId);
            if (user != null)
            {
                userName = user.UserName; // Suponiendo que `UserName` es el nombre del usuario
            }
            else
            {
                errorMessage = "User not found.";
                return;
            }

            // Obtener los paquetes del usuario seleccionado
            userPackages = (await PackageService.GetPackagesBySelectedUserAsync(userId)).ToList();
        }
        catch (UnauthorizedAccessException ex)
        {
            errorMessage = "No tiene permiso para ver los paquetes de este usuario.";
            Console.WriteLine(errorMessage);
        }
        catch (Exception ex)
        {
            errorMessage = $"Error fetching packages for user {userId}: {ex.Message}";
            Console.WriteLine(errorMessage);
        }
    }
}

<!-- Añadimos clases de Bootstrap para estructura y CSS personalizado para los colores -->
<div class="container mt-4">
    @if (!string.IsNullOrEmpty(userName))
    {
        <h3 class="mb-4">Packages of @userName</h3>
    }
    else if (string.IsNullOrEmpty(errorMessage))
    {
        <!-- Mostrar un spinner mientras carga los datos -->
        <div class="text-center my-4">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @errorMessage
        </div>
    }
    else if (userPackages.Any())
    {
        <!-- Tabla con esquema de colores azul y morado -->
        <table class="table table-hover table-bordered align-middle custom-table">
            <thead class="custom-table-header">
                <tr>
                    <th scope="col">Package ID</th>
                    <th scope="col">Neighborhood</th>
                    <th scope="col">Parish</th>
                    <th scope="col">Main Street</th>
                    <th scope="col">Secondary Street</th>
                    <th scope="col">House Number</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var package in userPackages)
                {
                    <tr>
                        <td>@package.PackageId</td>
                        <td>@package.AddressNeighborhood</td>
                        <td>@package.AddressParish</td>
                        <td>@package.AddressMainStreet</td>
                        <td>@package.AddressSecondaryStreet</td>
                        <td>@package.HouseNumber</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else if (string.IsNullOrEmpty(errorMessage) && !userPackages.Any())
    {
        <p class="text-muted">No packages found for this user.</p>
    }
</div>

<!-- CSS personalizado para la tabla -->
<style>
    .custom-table {
        background-color: #f0f4ff; /* Fondo claro en azul */
    }

    .custom-table-header {
        background-color: #6c5ce7; /* Morado oscuro para el encabezado */
        color: white; /* Texto blanco para el encabezado */
    }

    .custom-table tr:hover {
        background-color: #a29bfe; /* Fondo morado claro al hacer hover */
    }

    .custom-table td, .custom-table th {
        border-color: #6c5ce7; /* Bordes morados */
    }
</style>